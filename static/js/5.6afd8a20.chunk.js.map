{"version":3,"sources":["resources/img/mjolnir.png","resources/img/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/form/Form.js","resources/img/vision.png","pages/Characters.js","components/hooks/http.hook.js","components/services/MarvelService.js"],"names":["ErrorMessage","style","width","src","error","alt","View","randomCharacter","name","description","thumbnail","homepage","wiki","indexOf","objectFit","className","image","length","substr","href","RandomChar","useState","setRandomCharacter","useMarvelService","loading","getCharacter","clearError","tryButton","useRef","useEffect","updateChar","toggleTry","state","current","disabled","onCharLoading","then","onCharLoaded","id","Math","floor","random","char","Spinner","ref","onClick","mjolnir","List","memo","charList","setCurrentChar","map","item","tabIndex","CharList","useContext","AppContext","setCharList","offset","setOffset","getAllCharacters","fetchCharList","document","querySelectorAll","focus","more","onListLoading","chars","onListLoaded","newChars","moreButton","Skeleton","CharInfo","currentChar","content","find","comics","comicList","i","resourceURI","generateComics","renderList","ErrorBoundary","errorInfo","console","log","this","setState","display","flexDirection","props","children","Component","Form","searchCharName","setSearchCharName","getCharacterByName","undefined","charResult","initialValues","charName","validationSchema","Yup","required","onSubmit","type","placeholder","to","Characters","Helmet","decoration","useHttp","setLoading","setError","request","useCallback","url","method","body","headers","fetch","res","ok","Error","status","json","data","_apiBase","_apiKey","_transformCharacter","urls","items","e","path","extension","_transformComics","comic","title","prices","pageCount","language","textObjects","pages","price","getAllComics","results","getComic","limit"],"mappings":"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","file":"static/js/5.6afd8a20.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","export default __webpack_public_path__ + \"static/media/error.d9f0acea.gif\";","import error from \"../../resources/img/error.gif\";\r\n\r\nfunction ErrorMessage({style={width: \"100%\"}}) {\r\n    return (\r\n        <>\r\n            <img style={style} src={error} alt=\"Error\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { useState, useEffect, useRef} from 'react';\nimport useMarvelService from '../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\n\nconst RandomChar = () => {\n    const [randomCharacter, setRandomCharacter] = useState({\n        name: null,\n        description: null,\n        thumbnail: null,\n        homepage: null,\n        wiki: null,\n    });\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n    const tryButton = useRef(null);\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    useEffect(() => {\n        loading ? toggleTry(true) : toggleTry(false);\n    }, [loading])\n\n\n    const toggleTry = (state) => {\n        tryButton.current.disabled = state;\n    }\n\n    const updateChar = () => {\n        clearError();\n        onCharLoading().then(onCharLoaded)\n    }\n\n    const onCharLoading = async () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        return await getCharacter(id)\n    }\n\n    const onCharLoaded = (char) => {\n        setRandomCharacter(char);\n    }\n\n    return (\n        <>\n            <div className=\"randomchar\">\n                <div className=\"randomchar__block\">\n                    {error ? <ErrorMessage/> : null}\n                    {loading ? <Spinner/> : null}\n                    {!error && !loading ? <View randomCharacter={randomCharacter}/> : null}\n                </div>\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Randomize a character!<br/>\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Click to show one\n                    </p>\n                    <button ref={tryButton} className=\"button button__main\"\n                    onClick={updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        </>\n    )\n}\n\nfunction View({randomCharacter}){\n    const {name, description, thumbnail, homepage, wiki} = randomCharacter;\n\n    const checkDesc = () => {\n        if (description && description.length >= 200) {\n            return `${description.substr(0, 200)}...`\n        }\n        return description;\n    }\n    \n    const image = (thumbnail) => {\n        return thumbnail && thumbnail.indexOf(\"image_not_available\") > -1 ? \n            <img src={thumbnail} style={{objectFit:\"contain\"}} alt=\"Random character\" className=\"randomchar__img\"/>\n            :\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n        \n    }\n    return (\n        <>\n            {image(thumbnail)}\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{checkDesc()}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">Homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default RandomChar;","import { useState, useEffect, useContext, memo } from 'react';\nimport useMarvelService from '../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\n\nimport './charList.scss';\n\nimport { AppContext } from '../app/App';\n\nconst CharList = () => {\n    const {charList, setCharList, setCurrentChar} = useContext(AppContext);\n    const [offset, setOffset] = useState(1500);\n    const {loading, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        fetchCharList(false);\n    }, [])\n\n    useEffect(() => {\n        if (charList.length > 0) document.querySelectorAll(\".char__item\")[charList.length - 9].focus()\n    }, [charList])\n    \n    const fetchCharList = (more) => {\n        onListLoading().then(chars => onListLoaded(chars, more))\n    } \n\n    const onListLoading = async () => {\n        return await getAllCharacters(offset);\n    }\n\n    const onListLoaded = (newChars, more) => {\n        more ? setCharList(charList => [...charList, ...newChars]) \n        : setCharList(newChars) \n    \n        setOffset(offset + 9)\n    }\n\n    const onMore = () => {\n        fetchCharList(true);\n    }\n\n    const moreButton = offset >= 1559 ? \n    <button className=\"button button__main button__long-no-more\">\n        <div className=\"inner\">No more characters left</div>\n    </button> : \n    <button disabled={loading} className=\"button button__main button__long\"\n    onClick={onMore}>\n        <div className=\"inner\">load more</div>\n    </button>;\n\n    return (\n        <div className=\"char__list\">\n            {moreButton}\n            <ul className=\"char__grid\">\n                <List charList={charList} setCurrentChar={setCurrentChar}/>\n            </ul>\n            {loading ? <Spinner/> : null}\n            {moreButton}\n        </div>\n    )\n}\n\nconst List = memo(({charList, setCurrentChar}) => {\n    return charList.map((item) => {\n        const {name, thumbnail} = item;\n        return (\n            <li tabIndex={0} className=\"char__item\" key={item.id}\n            onClick={() => setCurrentChar(name)}>\n                <img src={thumbnail} alt={name}/>\n                <div className=\"char__name\">{name}</div>\n            </li>\n        )\n    }); \n})\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport { AppContext } from '../app/App';\nimport { useContext, useEffect } from 'react';\n\nconst CharInfo = () => {\n    const {charList, currentChar, setCurrentChar} = useContext(AppContext);\n\n    useEffect(() => {\n        return () => {\n            setCurrentChar(null);\n        }\n    }, [])\n\n    const renderList = () => {\n        const {\n            name, \n            description, \n            thumbnail, \n            homepage, \n            wiki, \n            comics\n        } = charList.find(item => item.name === currentChar)\n\n        const generateComics = (comics) => {\n            if (comics.length === 0) return \"No data on this character\";\n\n            let comicList = [];\n            for(let i = 0; i < comics.length; i++) {\n                if (i > 9) break;\n                \n                comicList[i] = \n                <li key={i} className=\"char__comics-item\">\n                    <a href={comics[i].resourceURI}>{comics[i].name}</a>\n                </li>\n            }\n            return comicList;  \n        }\n        return (\n            <>\n                <div className=\"char__basics\">\n                    <img src={thumbnail} alt={name}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">{description}</div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                   {generateComics(comics)}\n                </ul> \n            </>\n        )\n    \n    }\n\n    const content = currentChar ? renderList() : <Skeleton/>\n    return (\n        <div className=\"char__info\">\n           {content}\n        </div>\n    )\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\n\r\n// Ловит ошибки в RENDER, LCC и конструктораз\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.error) {\r\n            return (\r\n                <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                    <div>Something horrible happened. Refresh the page!</div>\r\n                    <ErrorMessage/>\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            this.props.children\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import { useContext, useEffect} from \"react\";\r\nimport { Formik, Form as FormikForm, Field} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppContext } from \"../app/App\";\r\n\r\nimport useMarvelService from \"../services/MarvelService\";\r\n\r\nimport \"./Form.scss\";\r\n\r\nconst Form = () => {\r\n    const {searchCharName, setSearchCharName} = useContext(AppContext);\r\n    const { loading, clearError, getCharacterByName } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setSearchCharName(undefined);\r\n        }\r\n    }, [])\r\n\r\n    const updateChar = (name) => {\r\n        clearError()\r\n        getCharacterByName(name).then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setSearchCharName(char)\r\n    }\r\n\r\n    const charResult = searchCharName ? \r\n    <p className=\"form__response-success\">Found! Go to {searchCharName.name} page?</p> \r\n    : searchCharName !== undefined ? <p className=\"form__response-error\">Character was not found. Please, check the name and try again.</p> : null\r\n    return (\r\n        <Formik\r\n            initialValues = {{\r\n                charName: \"\"\r\n            }}\r\n            validationSchema = {Yup.object({\r\n                charName: Yup.string().required(\"This field is required\")\r\n            })}\r\n            onSubmit = {({charName}) => {\r\n                updateChar(charName)\r\n            }}\r\n        >\r\n            <FormikForm\r\n            className=\"form\">\r\n                <label className=\"form__desc\">Or find a character by name:</label>\r\n                <div className=\"form__search-wrapper\">\r\n                    <Field \r\n                    name=\"charName\"\r\n                    className={`form__search`} \r\n                    type=\"text\" \r\n                    placeholder=\"Enter a character's name\"/>\r\n                    <button \r\n                        className=\"form__button button button__main\"\r\n                        type=\"submit\"\r\n                        disabled={loading}\r\n                    >\r\n                        <div className=\"inner\">Find</div>\r\n                    </button>\r\n                </div>\r\n                <div className=\"form__response\" >\r\n                    {charResult}\r\n                    {searchCharName ? \r\n                    <Link to={`/characters/${searchCharName.name}`} className=\"form__button button\">\r\n                        <div className=\"form__inner\">To page</div>\r\n                    </Link> : null}\r\n                </div>\r\n            </FormikForm>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import Helmet from \"react-helmet\";\r\n\r\nimport RandomChar from \"../components/randomChar/RandomChar\";\r\nimport CharList from \"../components/charList/CharList\";\r\nimport CharInfo from \"../components/charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\r\nimport Form from \"../components/form/Form\";\r\n\r\nimport decoration from '../resources/img/vision.png';\r\n\r\nconst Characters = () => {\r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Marvel information portal\"\r\n                    />\r\n                <title>Marvel information portal</title>\r\n            </Helmet>\r\n            <RandomChar/> \r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList/> \r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <div className=\"char__wrapper\">\r\n                        <CharInfo/>\r\n                        <Form/>  \r\n                    </div>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Characters;","import { useCallback, useState } from \"react\";\r\n\r\nfunction useHttp() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {\"Content-Type\":\"application/json\"}) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const res = await fetch(url, {method, body, headers});\r\n\r\n            if (!res.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n            }\r\n\r\n            const data = await res.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(true);\r\n            throw e;\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(false), [])\r\n\r\n    return {loading, error, request, clearError};\r\n}\r\n\r\nexport default useHttp;","import useHttp from \"../hooks/http.hook\";\r\n\r\nfunction useMarvelService() {\r\n    const {loading, request, error, clearError} = useHttp();\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _apiKey = \"apikey=794f72789e4da961747307dfea703504\";\r\n    let _baseOffset = 210;\r\n\r\n    const _transformCharacter = (char) => {\r\n        const {id, name, description, thumbnail, urls} = char;\r\n        let comics;\r\n        try {\r\n            comics = char.comics.items\r\n        } catch (e) {\r\n            comics = [];  \r\n        }\r\n        return {\r\n            id: id ? id : null,\r\n            name: name ? name : null,\r\n            description: description ? description : \"No Data on this character\",\r\n            thumbnail: `${thumbnail.path}.${thumbnail.extension}`,\r\n            homepage: urls[0].url,\r\n            wiki: urls[1].url,\r\n            comics: comics\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comic) => {\r\n        const {id, thumbnail, title, /*urls, */prices, pageCount, description} = comic;\r\n        const language = comic.textObjects.language || \"en-us\";\r\n\r\n        return {\r\n            thumbnail: `${thumbnail.path}.${thumbnail.extension}`, \r\n            id,\r\n            title, \r\n            description: description ? description : \"No description for this comic\",\r\n            pages: pageCount,\r\n            language,\r\n            //url: urls[0].url, \r\n            price: prices[0].price == 0 ? \"NOT AVAILABLE\" : `${prices[0].price}$`\r\n        }\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&apikey=794f72789e4da961747307dfea703504`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?apikey=794f72789e4da961747307dfea703504`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset, limit = 9) => {\r\n        const res = await request(`${_apiBase}characters?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n        if (!res.data.results[0]) return null;\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getCharacterByName,getAllComics, getComic};\r\n}\r\n\r\nexport default useMarvelService;"],"sourceRoot":""}